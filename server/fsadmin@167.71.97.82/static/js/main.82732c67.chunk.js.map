{"version":3,"sources":["components/layout/LazyFallbackGenericPage.js","App.js","serviceWorker.js","store/reducers/story-reducer.js","store/reducers/user-reducer.js","store/reducers/cart-reducer.js","store/reducers/artworks-reducer.js","index.js","store/actions/story-actions.js","store/actions/artworks-actions.js","firebase.js","apiCalls/auth.js"],"names":["LazyFallbackGenericPage","style","height","className","Navbar","lazy","LocationBar","Footer","SeriesList","SeriesPage","PaintingDetailedPage","LandingPage","FullResolutionImage","Cv","Exhibitions","Contact","BunStory","Register","RegisterComplete","Login","UserHistory","ForgotPassword","UserRoute","Cart","Checkout","Payment","AdminRoute","AddOrEditPainting","AddPaintingsFromCSV","ManageSeries","AddMultiplePaintingPhotos","AdminDashboard","ManageOrders","AddPage","App","dispatch","useDispatch","useEffect","unsubscribe","auth","onAuthStateChanged","a","user","getIdTokenResult","idTokenResult","currentUser","token","then","res","type","payload","name","data","email","role","_id","catch","err","console","log","fallback","transition","Flip","Helmet","exact","path","component","render","isAdmin","Boolean","window","location","hostname","match","initialState","textRefs","textContainerRef","story","state","action","SET_TEXT_REFS","SET_TEXT_CONTAINER_REF","userReducer","items","selectedShippingAddress","localStorage","getItem","JSON","parse","cart","cachedSeries","cachedPaintingsBySeries","artworks","UPDATE_CACHED_SERIES","UPDATE_CACHED_PAINTINGS","seriesName","paintings","rootReducer","combineReducers","storyReducer","cartReducer","artworksReducer","reduxMiddleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","setTextRefs","setTextContainerRef","updateCachedSeries","newSeries","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleAuthProvider","GoogleAuthProvider","createOrUpdateUser","authtoken","axios","post","headers","currentAdmin"],"mappings":"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","file":"static/js/main.82732c67.chunk.js","sourcesContent":["import React from 'react'\r\nimport './navBar/nav.css'\r\n\r\nexport const LazyFallbackGenericPage = () => {\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div className=\"nav\" />\r\n      <div className=\"page-frame\" />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, lazy, Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\nimport { currentUser } from \"./apiCalls/auth\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ToastContainer, Flip } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { LazyFallbackGenericPage } from \"./components/layout/LazyFallbackGenericPage\";\r\n// layout\r\nconst Navbar = lazy(() => import(\"./components/layout/navBar/Navbar\"));\r\nconst LocationBar = lazy(() =>\r\n  import(\"./components/layout/LocationBar/LocationBar\")\r\n);\r\nconst Footer = lazy(() => import(\"./components/layout/footer/Footer\"));\r\n// pages\r\nconst SeriesList = lazy(() => import(\"./components/series/SeriesList\"));\r\nconst SeriesPage = lazy(() => import(\"./components/series/SeriesPage\"));\r\nconst PaintingDetailedPage = lazy(() =>\r\n  import(\"./components/paintings/paintingDetailedPage/PaintingDetailedPage\")\r\n);\r\nconst LandingPage = lazy(() => import(\"./components/landing/LandingPage\"));\r\nconst FullResolutionImage = lazy(() =>\r\n  import(\"./components/paintings/FullResolutionImage\")\r\n);\r\nconst Cv = lazy(() => import(\"./components/cv/Cv\"));\r\nconst Exhibitions = lazy(() => import(\"./components/Exhibitions/Exhibitions\"));\r\nconst Contact = lazy(() => import(\"./components/contact/Contact\"));\r\nconst BunStory = lazy(() => import(\"./components/bunStory/BunStory\"));\r\n// auth\r\nconst Register = lazy(() => import(\"./components/auth/Register\"));\r\nconst RegisterComplete = lazy(() =>\r\n  import(\"./components/auth/RegisterComplete\")\r\n);\r\nconst Login = lazy(() => import(\"./components/auth/Login\"));\r\nconst UserHistory = lazy(() => import(\"./components/user/history/UserHistory\"));\r\nconst ForgotPassword = lazy(() => import(\"./components/auth/ForgotPassword\"));\r\n// ecommerce user\r\nconst UserRoute = lazy(() => import(\"./components/routes/UserRoute\"));\r\nconst Cart = lazy(() => import(\"./components/user/shopFlow/cart/Cart\"));\r\nconst Checkout = lazy(() =>\r\n  import(\"./components/user/shopFlow/checkout/Checkout\")\r\n);\r\nconst Payment = lazy(() => import(\"./components/user/shopFlow/Payment\"));\r\n// site admin\r\nconst AdminRoute = lazy(() => import(\"./components/routes/AdminRoute\"));\r\nconst AddOrEditPainting = lazy(() =>\r\n  import(\"./components/admin/AddOrEditPainting\")\r\n);\r\nconst AddPaintingsFromCSV = lazy(() =>\r\n  import(\"./components/admin/addPaintingsFromCSV/AddPaintingsFromCSV\")\r\n);\r\nconst ManageSeries = lazy(() =>\r\n  import(\"./components/admin/manageSeries/ManageSeries\")\r\n);\r\nconst AddMultiplePaintingPhotos = lazy(() =>\r\n  import(\r\n    \"./components/admin/addMultiplePaintingPhotos/AddMultiplePaintingPhotos\"\r\n  )\r\n);\r\nconst AdminDashboard = lazy(() =>\r\n  import(\"./components/admin/adminDashboard/AdminDashboard\")\r\n);\r\nconst ManageOrders = lazy(() =>\r\n  import(\"./components/admin/manageOrders/ManageOrders\")\r\n);\r\nconst AddPage = lazy(() => import(\"./components/admin/AddPage\"));\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // to check firebase auth state\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        currentUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: \"LOGGED_IN_USER\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Suspense fallback={<LazyFallbackGenericPage />}>\r\n      <Router>\r\n        <ToastContainer transition={Flip} />\r\n        <Helmet>\r\n          <title>{\"L. E. Silverman\"}</title>\r\n        </Helmet>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/full-res/:series/:paintingSlug\"\r\n              component={FullResolutionImage}\r\n            />\r\n            <Route exact path=\"/the-professor\" component={\"\"} />\r\n            <Navbar />\r\n          </Switch>\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/full-res/:seriesSlug/:painting\"\r\n              component={\"\"}\r\n            />\r\n            <Route exact path=\"/the-professor\" component={\"\"} />\r\n            <Route\r\n              exact\r\n              path=\"/:page/:seriesSlug?/:paintingSlug?/\"\r\n              component={LocationBar}\r\n            />\r\n          </Switch>\r\n          <Switch>\r\n            <Route exact path=\"/about\" component={Cv} />\r\n            <Route exact path=\"/exhibitions\" component={Exhibitions} />\r\n            <Route exact path=\"/contact\" component={Contact} />\r\n            <Route exact path=\"/the-professor\" component={BunStory} />\r\n            <Route exact path=\"/artworks/\" component={SeriesList} />\r\n            <Route exact path=\"/artworks/:seriesSlug?\" component={SeriesPage} />\r\n            <Route\r\n              exact\r\n              path=\"/artworks/:seriesSlug?/:paintingSlug?\"\r\n              component={PaintingDetailedPage}\r\n            />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route\r\n              exact\r\n              path=\"/complete-registration\"\r\n              component={RegisterComplete}\r\n            />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route\r\n              exact\r\n              path=\"/request-password-reset\"\r\n              component={ForgotPassword}\r\n            />\r\n            <Route exact path=\"/cart\" component={Cart} />\r\n            <UserRoute exact path=\"/checkout\" component={Checkout} />\r\n            <UserRoute exact path=\"/payment\" component={Payment} />\r\n            <UserRoute exact path=\"/user/history\" component={UserHistory} />\r\n            <AdminRoute\r\n              exact\r\n              path=\"/admin/add-painting\"\r\n              component={AddOrEditPainting}\r\n            />\r\n            <AdminRoute\r\n              exact\r\n              path=\"/admin/edit-painting/:paintingSlug\"\r\n              component={AddOrEditPainting}\r\n            />\r\n            <AdminRoute\r\n              exact\r\n              path=\"/admin/add-paintings-from-csv\"\r\n              component={AddPaintingsFromCSV}\r\n            />\r\n            <AdminRoute\r\n              exact\r\n              path=\"/admin/manage-series\"\r\n              component={ManageSeries}\r\n            />\r\n            <AdminRoute\r\n              exact\r\n              path=\"/admin/add-multiple-painting-photos\"\r\n              component={AddMultiplePaintingPhotos}\r\n            />\r\n            <AdminRoute exact path=\"/admin/add-page\" component={AddPage} />\r\n            <AdminRoute\r\n              exact\r\n              path=\"/admin/orders\"\r\n              render={() => <ManageOrders isAdmin={true} />}\r\n            />\r\n            <AdminRoute exact path=\"/admin\" component={AdminDashboard} />\r\n          </Switch>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/full-res/:seriesSlug/:paintingSlug\"\r\n              component={\"\"}\r\n            />\r\n            <Route exact path=\"/the-professor\" component={\"\"} />\r\n            <Route path=\"/:page\" component={Footer} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  SET_TEXT_REFS,\r\n  SET_TEXT_CONTAINER_REF,\r\n} from \"../actions/story-actions\";\r\n\r\nconst initialState = {\r\n  textRefs: {},\r\n  textContainerRef: null,\r\n};\r\n\r\nconst story = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TEXT_REFS:\r\n      return {\r\n        ...state,\r\n        textRefs: action.textRefs,\r\n      };\r\n    case SET_TEXT_CONTAINER_REF:\r\n      return {\r\n        ...state,\r\n        textContainerRef: action.textContainerRef,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default story","const userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"LOGGED_IN_USER\":\r\n      return action.payload;\r\n    case \"LOGOUT\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer","let initialState = {\r\n  items: [],\r\n  selectedShippingAddress: \"\"\r\n}\r\n\r\nif (typeof window !== \"undefined\") {\r\n  if (localStorage.getItem('cart')) {\r\n    initialState.items = JSON.parse(localStorage.getItem('cart'))\r\n  }\r\n}\r\n\r\nconst cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_CART\":\r\n      return { ...state, items: [...action.payload] };\r\n    case \"SET_SELECTED_SHIPPING_ADDRESS\":\r\n      return { ...state, selectedShippingAddress: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default cart","import {\r\n  UPDATE_CACHED_SERIES,\r\n  UPDATE_CACHED_PAINTINGS,\r\n} from \"../actions/artworks-actions\";\r\n\r\nlet initialState = {\r\n  cachedSeries: [],\r\n  cachedPaintingsBySeries: {},\r\n};\r\n\r\nconst artworks = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CACHED_SERIES:\r\n      return { ...state, cachedSeries: [...action.payload] };\r\n    case UPDATE_CACHED_PAINTINGS:\r\n      return {\r\n        ...state,\r\n        cachedPaintingsBySeries: {\r\n          ...state.cachedPaintingsBySeries,\r\n          [action.payload.seriesName]: [...action.payload.paintings],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default artworks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/style.css\";\r\nimport \"./css/elementSlider.css\";\r\nimport \"./css/exhibitions.css\";\r\nimport \"./css/bunStory.css\";\r\nimport \"./css/bunStoryText.css\";\r\nimport \"./css/auth.css\";\r\nimport \"./css/forms.css\";\r\nimport \"./css/buttons.css\";\r\nimport \"./css/tables.css\";\r\nimport \"./css/toastify.css\";\r\nimport \"./css/stripe.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport storyReducer from \"./store/reducers/story-reducer\";\r\nimport userReducer from \"./store/reducers/user-reducer\";\r\nimport cartReducer from \"./store/reducers/cart-reducer\";\r\nimport artworksReducer from \"./store/reducers/artworks-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  story: storyReducer,\r\n  user: userReducer,\r\n  cart: cartReducer,\r\n  artworks: artworksReducer,\r\n});\r\n\r\nconst reduxMiddleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeWithDevTools(applyMiddleware(...reduxMiddleware))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const SET_TEXT_REFS = \"SET_TEXT_REFS\";\r\nexport const SET_TEXT_CONTAINER_REF = \"SET_TEXT_CONTAINER_REF\";\r\n\r\nexport const setTextRefs = (textRefs) => {\r\n  return {\r\n    type: SET_TEXT_REFS,\r\n    textRefs,\r\n  };\r\n};\r\nexport const setTextContainerRef = (textContainerRef) => {\r\n  return {\r\n    type: SET_TEXT_CONTAINER_REF,\r\n    textContainerRef,\r\n  };\r\n};\r\n","export const UPDATE_CACHED_SERIES = \"UPDATE_CACHED_SERIES\";\r\nexport const UPDATE_CACHED_PAINTINGS = \"UPDATE_CACHED_PAINTINGS\";\r\n\r\nexport const updateCachedPaintings = (newPaintings) => {\r\n  return {\r\n    type: UPDATE_CACHED_PAINTINGS,\r\n    payload: newPaintings,\r\n  };\r\n};\r\n\r\nexport const updateCachedSeries = (newSeries) => {\r\n  return {\r\n    type: UPDATE_CACHED_SERIES,\r\n    payload: newSeries,\r\n  };\r\n};\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: \"ellen-silverman.firebaseapp.com\",\r\n  databaseURL: \"https://ellen-silverman.firebaseio.com\",\r\n  projectId: \"ellen-silverman\",\r\n  storageBucket: \"ellen-silverman.appspot.com\",\r\n  messagingSenderId: \"1039971504775\",\r\n  appId: \"1:1039971504775:web:b8448a402af425300e9e22\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth()\r\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider()","import axios from \"axios\";\r\n\r\nexport const createOrUpdateUser = async (authtoken) => await axios.post(\r\n  `${process.env.REACT_APP_API}/auth/create-or-update-user`,\r\n  {},\r\n  {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  }\r\n);\r\n\r\nexport const currentUser = async (authtoken) => await axios.post(\r\n  `${process.env.REACT_APP_API}/auth/current-user`,\r\n  {},\r\n  {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  }\r\n);\r\n\r\nexport const currentAdmin = async (authtoken) => await axios.post(\r\n  `${process.env.REACT_APP_API}/auth/current-admin`,\r\n  {},\r\n  {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  }\r\n);\r\n"],"sourceRoot":""}