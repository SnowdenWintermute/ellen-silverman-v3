{"version":3,"sources":["components/common/button/PrimaryButton.js","components/common/progressIndicator/ProgressIndicator.js","components/utils/createImgSrcStringFromBinary.js","apiCalls/paintings.js","store/actions/cart-actions.js","components/paintings/paintingDetailedPage/PaintingDetailsTextBox.js","components/paintings/paintingDetailedPage/PaintingDetailedPage.js"],"names":["useStyles","makeStyles","fullWidth","width","PrimaryButton","onClick","title","isSubmit","disabled","customClasses","outlined","isGrey","classes","variant","color","className","classnames","type","ProgressIndicator","module","exports","contentType","data","Buffer","from","toString","getPainting","slug","a","axios","get","process","getPaintingWithFullImage","getPaintingThumbnail","id","addPainting","painting","authToken","post","headers","_boundary","editPainting","put","removePainting","delete","uploadPaintingCSVFormData","csvFormData","handleProgressEvent","onUploadProgress","progressEvent","uploadMultiplePaintingImages","formData","updateCartItems","newCartItems","payload","setSelectedShippingAddress","addressId","PaintingDetailsTextBox","seriesSlug","dispatch","useDispatch","useState","paintingIsInCart","setPaintingIsInCart","useEffect","window","localStorage","getItem","JSON","parse","forEach","item","paintingCost","price","sold","height","year","drawingMaterial","support","to","newCart","push","setItem","stringify","cart","paintingWithNoImages","image","thumbnail","unique","_","uniqWith","isEqual","toast","success","PaintingDetailedPage","props","setPainting","loading","setLoading","showZoomFrame","setShowZoomFrame","paintingSlug","match","params","newPainting","console","log","error","asyncFunc","scrollTo","oncontextmenu","Object","keys","length","onMouseEnter","innerWidth","onMouseOut","imageSrc","createImgSrcStringFromBinary","touchActivation","mouseActivation","style","zIndex","position"],"mappings":"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","file":"static/js/23.24852496.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core'\r\nimport classnames from 'classnames'\r\n\r\nconst useStyles = makeStyles({\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  },\r\n})\r\n\r\nconst PrimaryButton = ({ onClick, title, fullWidth, isSubmit, disabled, customClasses, outlined, isGrey }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Button\r\n      variant={outlined ? \"outlined\" : \"contained\"}\r\n      color={isGrey ? \"default\" : \"primary\"}\r\n      className={classnames(customClasses, fullWidth && classes.fullWidth)}\r\n      type={isSubmit && \"submit\"}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {title}\r\n    </Button>\r\n  )\r\n}\r\nexport default PrimaryButton","import { CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst ProgressIndicator = () => <CircularProgress />\r\nexport default ProgressIndicator","module.exports = function createImgSrcStringFromBinary(contentType, data) {\r\n  return `data:${contentType};base64,${Buffer.from(data).toString('base64')}`\r\n}","import axios from \"axios\";\r\n\r\nexport const getPainting = async (slug) => await axios.get(`${process.env.REACT_APP_API}/paintings/${slug}`);\r\n\r\nexport const getPaintingWithFullImage = async (slug) => await axios.get(`${process.env.REACT_APP_API}/paintings/with-full-image/${slug}`);\r\n\r\nexport const getPaintingThumbnail = async (id) => await axios.get(`${process.env.REACT_APP_API}/paintings/thumbnail/${id}`);\r\n\r\nexport const addPainting = async (painting, authToken) => await axios.post(\r\n  `${process.env.REACT_APP_API}/paintings`,\r\n  painting,\r\n  {\r\n    headers: {\r\n      authToken,\r\n      \"Content-Type\": `multipart/form-data; boundary=${painting._boundary}`,\r\n    },\r\n  });\r\n\r\nexport const editPainting = async (painting, authToken) => await axios.put(\r\n  `${process.env.REACT_APP_API}/paintings`,\r\n  painting,\r\n  {\r\n    headers: {\r\n      authToken,\r\n      \"Content-Type\": `multipart/form-data; boundary=${painting._boundary}`,\r\n    },\r\n  });\r\n\r\n\r\nexport const removePainting = async (id, authToken) =>\r\n  await axios.delete(`${process.env.REACT_APP_API}/paintings`, {\r\n    headers: {\r\n      authToken,\r\n    },\r\n    data: {\r\n      id,\r\n    },\r\n  });\r\n\r\nexport const uploadPaintingCSVFormData = async (\r\n  csvFormData,\r\n  authToken,\r\n  handleProgressEvent\r\n) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/paintings/upload-csv`,\r\n    csvFormData,\r\n    {\r\n      headers: {\r\n        authToken,\r\n        \"Content-Type\": `multipart/form-data; boundary=${csvFormData._boundary}`,\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        handleProgressEvent(progressEvent);\r\n      },\r\n    }\r\n  );\r\n\r\nexport const uploadMultiplePaintingImages = async (\r\n  formData,\r\n  authToken,\r\n  handleProgressEvent\r\n) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/paintings/upload-multiple-painting-images`,\r\n    formData,\r\n    {\r\n      headers: {\r\n        authToken,\r\n        \"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`,\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        handleProgressEvent(progressEvent);\r\n      },\r\n    }\r\n  );\r\n","export const UPDATE_CART = \"UPDATE_CART\";\r\nexport const SET_SELECTED_SHIPPING_ADDRESS = \"SET_SELECTED_SHIPPING_ADDRESS\";\r\n\r\nexport const updateCartItems = (newCartItems) => {\r\n  return {\r\n    type: UPDATE_CART,\r\n    payload: newCartItems,\r\n  };\r\n};\r\n\r\nexport const setSelectedShippingAddress = (addressId) => {\r\n  return {\r\n    type: SET_SELECTED_SHIPPING_ADDRESS,\r\n    payload: addressId,\r\n  };\r\n};","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateCartItems } from \"../../../store/actions/cart-actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from 'lodash'\r\nimport PrimaryButton from '../../common/button/PrimaryButton'\r\n\r\nconst PaintingDetailsTextBox = ({ painting, seriesSlug }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [paintingIsInCart, setPaintingIsInCart] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        const cart = JSON.parse(localStorage.getItem('cart'))\r\n        cart.forEach(item => {\r\n          if (item.title === painting.title) setPaintingIsInCart(true)\r\n        })\r\n      }\r\n    }\r\n  }, [painting])\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n      const paintingWithNoImages = { ...painting, image: null, thumbnail: null }\r\n      cart.push(paintingWithNoImages)\r\n      let unique = _.uniqWith(cart, _.isEqual)\r\n      localStorage.setItem('cart', JSON.stringify(unique))\r\n      toast.success(`Added ${painting.title} to cart`)\r\n      setPaintingIsInCart(true)\r\n      dispatch(updateCartItems(cart))\r\n    }\r\n  }\r\n\r\n  const handleRemoveFromCart = () => {\r\n    let newCart = []\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        const cart = JSON.parse(localStorage.getItem('cart'))\r\n        cart.forEach(item => {\r\n          if (item.title !== painting.title) newCart.push({ ...item })\r\n        })\r\n        localStorage.setItem('cart', JSON.stringify(newCart))\r\n        setPaintingIsInCart(false)\r\n        dispatch({\r\n          type: \"UPDATE_CART\",\r\n          payload: newCart\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  let paintingCost;\r\n  if (painting.price && !painting.sold) paintingCost = `Cost unframed: $${painting.price}`;\r\n  else if (painting.price && painting.sold) paintingCost = `Sold ($${painting.price})`;\r\n  else if (!painting.price) paintingCost = \"Price not listed\"\r\n\r\n  return (\r\n    <div className=\"painting-details-text-box\">\r\n      <div className=\"painting-title\">{painting.title}</div>\r\n      <div className=\"painting-detail-text\">Original Painting</div>\r\n      <div className=\"painting-detail-text\">\r\n        Size, unframed: {painting.height}\" x {painting.width}\"\r\n            </div>\r\n      {painting.year !== 0 && (\r\n        <div className=\"painting-detail-text\">\r\n          Painted {painting.year}\r\n        </div>\r\n      )}\r\n      <div className=\"painting-detail-text\">\r\n        {`${painting.drawingMaterial} on ${painting.support}`}\r\n      </div>\r\n      <div className=\"painting-detail-text\">{paintingCost}</div>\r\n      <Link\r\n        className=\"standard-link underlined\"\r\n        to={`/full-res/${seriesSlug}/${painting.slug}`}\r\n      >\r\n        View Full Resolution\r\n      </Link>\r\n      <br></br>\r\n      <Link\r\n        to={`/artworks/${seriesSlug}`}\r\n        className=\"standard-link underlined\"\r\n      >\r\n        View other paintings in this series\r\n            </Link>\r\n      {(!painting.sold && painting.price) &&\r\n        <>\r\n          <br />\r\n          <br />\r\n          {paintingIsInCart ?\r\n            <PrimaryButton title=\"Remove from Cart\" onClick={handleRemoveFromCart} isGrey /> :\r\n            <PrimaryButton title=\"Add to Cart\" onClick={handleAddToCart} />}\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default PaintingDetailsTextBox","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  MagnifierContainer,\r\n  SideBySideMagnifier,\r\n} from \"react-image-magnifiers\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getPaintingWithFullImage } from \"../../../apiCalls/paintings\";\r\nimport PaintingDetailsTextBox from \"./PaintingDetailsTextBox\";\r\nimport createImgSrcStringFromBinary from \"../../utils/createImgSrcStringFromBinary\";\r\nimport ProgressIndicator from \"../../common/progressIndicator/ProgressIndicator\";\r\nimport \"./paintingDetailsPage.css\";\r\n\r\nconst PaintingDetailedPage = (props) => {\r\n  const [painting, setPainting] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [showZoomFrame, setShowZoomFrame] = useState(false);\r\n  const { paintingSlug } = props.match.params;\r\n  const { seriesSlug } = props.match.params;\r\n\r\n  useEffect(() => {\r\n    const asyncFunc = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const newPainting = await getPaintingWithFullImage(paintingSlug);\r\n        setPainting({ ...newPainting.data });\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast.error(JSON.stringify(error));\r\n      }\r\n      setLoading(false);\r\n    };\r\n    asyncFunc();\r\n  }, [paintingSlug]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    // prevent context menu on long press\r\n    // window.oncontextmenu = function (event) {\r\n    //   event.preventDefault();\r\n    //   event.stopPropagation();\r\n    //   return false;\r\n    // };\r\n    return function cleanup() {\r\n      window.oncontextmenu = () => {};\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"page-frame\">\r\n        <div className=\"flex-center\">\r\n          <ProgressIndicator />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (!Object.keys(painting).length > 0) {\r\n    return <div className=\"flex-center\">No painting by that name found</div>;\r\n  } else\r\n    return (\r\n      <div className=\"page-frame\">\r\n        <div className=\"painting-details-content-holder\">\r\n          <MagnifierContainer className=\"painting-details-img\">\r\n            <div\r\n              onMouseEnter={() => {\r\n                window.innerWidth > 1460 && setShowZoomFrame(true);\r\n              }}\r\n              onMouseOut={() => setShowZoomFrame(false)}\r\n            >\r\n              <SideBySideMagnifier\r\n                imageSrc={\r\n                  painting.image &&\r\n                  createImgSrcStringFromBinary(\r\n                    painting.image.contentType,\r\n                    painting.image.data\r\n                  )\r\n                }\r\n                // alwaysInPlace={true}\r\n                touchActivation={\"longTouch\"}\r\n                mouseActivation={\"click\"}\r\n                style={{ zIndex: \"2\", position: \"relative\" }}\r\n              ></SideBySideMagnifier>\r\n            </div>\r\n            {showZoomFrame && (\r\n              <div className=\"zoom-frame\">\r\n                <ProgressIndicator />\r\n              </div>\r\n            )}\r\n          </MagnifierContainer>\r\n          {\r\n            <PaintingDetailsTextBox\r\n              painting={painting}\r\n              seriesSlug={seriesSlug}\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default PaintingDetailedPage;\r\n"],"sourceRoot":""}